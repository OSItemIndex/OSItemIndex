version: '3.8'
services:

  traefik:
    image: traefik
    container_name: traefik
    command:
      - --api=true
      - --api.insecure=true # Dashboard
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false # exposes services by default if true
      - --entryPoints.web.address=:80
    ports:
      - '80:80' # HTTP port
      - '8080:8080' # Traefik
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro' # docker api socket

  postgres:
    image: supabase/postgres:latest
    container_name: postgres
    env_file: .env
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ] # runs a shell command to check if the postgres server is ready - https://www.postgresql.org/docs/current/app-pg-isready.html
        interval: 10s
        timeout: 10s
        retries: 5
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    labels:
      - traefik.enable=true
      - traefik.http.routers.postgres.rule=Host(`postgres.localhost`)
    volumes:
      - ./create-publication.sql:/docker-entrypoint-initdb.d/create-publication.sql

  realtime:
    image: supabase/realtime:latest
    container_name: postgres-realtime
    environment:
      DB_HOST: postgres
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_PORT: ${POSTGRES_PORT}
      PORT: 5000
      SECURE_CHANNELS: 'false'
    ports:
      - '23400:5000'
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - traefik.enable=true

  api:
    container_name: api
    build:
      context: ./OSItemIndex.API
    env_file: .env
    environment:
      DbOptions__DbHost: postgres
      DbOptions__DbUser: ${POSTGRES_USER}
      DbOptions__DbPass: ${POSTGRES_PASSWORD}
      DbOptions__DbPort: ${POSTGRES_PORT}
      DbOptions__DbDatabase: ${POSTGRES_DB}
    ports:
      - '23401:5000'
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`localhost`) && (PathPrefix(`/api`) || PathPrefix(`/swagger`))

  aggregator:
      container_name: aggregator
      build:
        context: ./OSItemIndex.Aggregator
      env_file: .env
      environment:
        DbOptions__DbHost: postgres
        DbOptions__DbUser: ${POSTGRES_USER}
        DbOptions__DbPass: ${POSTGRES_PASSWORD}
        DbOptions__DbPort: ${POSTGRES_PORT}
        DbOptions__DbDatabase: ${POSTGRES_DB}
      ports:
        - '23402:5000'
      deploy:
        resources:
          limits:
            memory: 512M
      depends_on:
        api:
          condition: service_started
        postgres:
          condition: service_healthy
