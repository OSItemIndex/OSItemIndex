version: '3.8'
services:

  postgres:
    image: postgres:alpine
    env_file: .env
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/pg-password
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ] # runs a shell command to check if the postgres server is ready - https://www.postgresql.org/docs/current/app-pg-isready.html
        interval: 10s
        timeout: 10s
        retries: 5
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    secrets:
      - pg-password

  aggregator:
    build:
      context: ./OSItemIndex.Aggregator
    env_file: .env
    secrets:
      - source: pg-password
        target: DbOptions__DbPass # Allows easy mapping to the DbOptions DbPass prop by utilizing the key-per-file configuration provider
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M

  api:
    build:
      context: ./OSItemIndex.API
    env_file: .env
    secrets:
      - source: pg-password
        target: DbOptions__DbPass # Allows easy mapping to the DbOptions DbPass prop by utilizing the key-per-file configuration provider
    depends_on:
      postgres:
        condition: service_healthy

secrets:
  pg-password:
    file: ./secrets/pg-password
